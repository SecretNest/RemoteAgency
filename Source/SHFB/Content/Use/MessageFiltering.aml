<?xml version="1.0" encoding="utf-8"?>
<topic id="c77e5e89-994c-42ee-86ab-addcd4d5ed46" revisionNumber="1">
  <developerWhitePaperDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Use events provided by <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.RemoteAgencyManager`3</codeEntityReference> to filter messages.</para>
    </introduction>

    <section>
      <title>Events</title>
      <content>
        <para><codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.RemoteAgencyManager`3</codeEntityReference> includes 2 events:</para>
        <list class="bullet">
					<listItem>
						<para><codeEntityReference qualifyHint="false">E:SecretNest.RemoteAgency.RemoteAgencyManager`3.AfterMessageReceived</codeEntityReference></para>
            <para>This event will be raised after manager unpack the message, before pass it to proxy or service wrapper.</para>
					</listItem>
					<listItem>
						<para><codeEntityReference qualifyHint="false">E:SecretNest.RemoteAgency.RemoteAgencyManager`3.BeforeMessageSending</codeEntityReference></para>
            <para>This event will be raised after manager received a message from proxy or service wrapper, before pack and send it out.</para>
					</listItem>
				</list>
      </content>
    </section>
    
    <section>
      <title>Event Argument</title>
      <content>
        <para>An object of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase`1</codeEntityReference> will be passed to handler as argument of event.</para>
        <para>This object contains full information from <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.MessageInstanceMetadata</codeEntityReference>, as well as serialized message contains parameters and/or return value of asset.</para>
        <list class="bullet">
					<listItem>
            <para>When <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.IsException</codeEntityReference> is set to true, this object is an instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.BeforeExceptionMessageProcessingEventArgs`1</codeEntityReference>. Type of original exception is specified.</para>
        	</listItem>
					<listItem>
            <para>When <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.IsException</codeEntityReference> is set to false, this object is an instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`1</codeEntityReference>. Used generic types are specified when asset is generic supported.</para>
          </listItem>
				</list>
        <para><codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase`1</codeEntityReference> is inherited from <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase</codeEntityReference>.</para>
        <para>In event handler method, <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing</codeEntityReference> should be specified. Value is from <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.MessageFurtherProcessing</codeEntityReference>, default is <codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.Continue</codeEntityReference>.</para>
      </content>
    </section>
    
    <section>
      <title>Further Processing</title>
      <content>
        <para>Further processing after event handler is based on the value of <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing</codeEntityReference>.</para>
        <list class="bullet">
          <listItem>
            <para><codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.Continue</codeEntityReference></para>
            <para>Continues to process this message. This is the default value.</para>
          </listItem>
          <listItem>
            <para><codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.ReplacedWithException</codeEntityReference></para>
            <para>Replaces the message as an exception instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.MessageProcessTerminatedException</codeEntityReference> and continues.</para>
            <para>This should be used only for response message, like the returning of a service method, or the receiver proxy or service wrapper will drop this message.</para>
          </listItem>
          <listItem>
            <para><codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateSilently</codeEntityReference></para>
            <para>Terminates this message instance silently.</para>
            <para>This should be used only for one way request message, or the requester may be locked in response message waiting when <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.Attributes.CustomizedOperatingTimedoutTimeAttribute.MillisecondsTimeout</codeEntityReference> is absent.</para>
          </listItem>
          <listItem>
            <para><codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateWithExceptionReturned</codeEntityReference></para>
            <para>Terminates this message and send an exception instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.MessageProcessTerminatedException</codeEntityReference> back to the sender.</para>
            <para>This should be used only for request message with no one way set. Trying set <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing</codeEntityReference> to this value with one way present, will set it as <codeEntityReference qualifyHint="false">F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateSilently</codeEntityReference> instead.</para>
          </listItem>
        </list>
      </content>
    </section>
    
    <section>
      <title>Message Waiting</title>
      <content>
        <para>Proxy or service wrapper will lock and wait, until or unless:</para>
        <list class="bullet">
          <listItem>
            <para>Linked response message is received.</para>
          </listItem>
          <listItem>
            <para>Linked exception message is received.</para>
          </listItem>
          <listItem>
            <para>This asset is set as one way by using <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.Attributes.CustomizedOneWayOperatingAttribute</codeEntityReference> and it is applicable.</para>
            <para>Note: for example, one way attribute will be ignored when set to a method with returning type or out parameter.</para>
          </listItem>
          <listItem>
            <para>Timeout is specified by <codeEntityReference qualifyHint="false">P:SecretNest.RemoteAgency.Attributes.CustomizedOperatingTimedoutTimeAttribute.MillisecondsTimeout</codeEntityReference> and time specified is passed.</para>
          </listItem>
        </list>
        <para>Or, it will wait forever until the thread of the caller ends.</para>
      </content>
    </section>
      
    <relatedTopics>
      <link xlink:href="ecc78678-d7a8-41b7-94ce-8743add59236"/>
      <link xlink:href="09cf7238-2b9d-4aff-afaf-949c7734f607"/>
    </relatedTopics>

  </developerWhitePaperDocument>
</topic>
