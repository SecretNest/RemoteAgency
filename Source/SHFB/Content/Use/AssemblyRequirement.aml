<?xml version="1.0" encoding="utf-8"?>
<topic id="6aa5c978-00d2-4273-9b80-0a4ad3acdd68" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Remote Agency is designed to generate code based on interface provided, and compile the code generated before using it. While compiling, all related assembly should be presented.</para>
    </introduction>

    <section>
      <title>Assembly discovering</title>
      <content>
        <para>While generating code, Remote Agency is discovering required assemblies at the same time.</para>
        <para>The image of assemblies will be located in order:</para>
        <list class="ordered">
          <listItem>
            <para>From assembly image cache of creator;</para>
            <para>Using the location of the assembly matched by Assembly.Load (dotnet framework) or in TRUSTED_PLATFORM_ASSEMBLIES (dotnet core app); and then,</para>
            <para>Event MissingAssemblyRequesting.</para>
          </listItem>
        </list>
      </content>
    </section>

    <section>
      <title>Additional assembly</title>
      <content>
        <para>
          If any additional assembly is required while compiling or running the generated code, <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.Attributes.ImportAssemblyAttribute</codeEntityReference> should be specified on the interface related.
        </para>
        <para>
          The assembly stored in file pointed by <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.Attributes.ImportAssemblyAttribute</codeEntityReference> will be loaded into assembly image cache and passed to compiler, no matter it is required while compiling or not.
        </para>
      </content>
    </section>

    <section>
      <title>Assembly image cache</title>
      <content>
        <para>
          Each instance of creator (proxy creator and service wrapper creator) has a cache to store images of all loaded assembly. The image can be loaded into cache from assembly discovering process including event MissingAssemblyRequesting, as well as through <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.Attributes.ImportAssemblyAttribute</codeEntityReference>. These cached assembly will not be asked to provide again through event MissingAssemblyRequesting.
        </para>
        <para>To clean the cache, call ClearBuilderAssemblyCache or use another instance of creator.</para>
        <list class="bullet">
          <listItem>
            <para>Proxy Creator: <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteAgency.ProxyCreator`2.ClearBuilderAssemblyCache</codeEntityReference></para>
          </listItem>
          <listItem>
            <para>Service Wrapper Creator: <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteAgency.ServiceWrapperCreator`2.ClearBuilderAssemblyCache</codeEntityReference></para>
          </listItem>
          <listItem>
            <para>SecretNest.RemoteAgency.DataContractSerializer.EasyEncapsulation.RemoteAgencyManagerEncapsulated: <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteAgency.RemoteAgencyManagerEncapsulated.ClearBuilderAssemblyCache</codeEntityReference></para>
          </listItem>
        </list>
      </content>
    </section>

    <section>
      <title>Event MissingAssemblyRequesting</title>
      <content>
        <para>When an assembly required cannot be located, or the located assembly doesn't contain the value of the file location (in memory generated for example), the event MissingAssemblyRequesting will be raised for asking the image of the assembly file.</para>
        <para>This event is defined in creator (proxy creator and service wrapper creator) and should be exposed by any class which contains a creator, such as manager class in EasyEncapsulation.</para>
        <para>This event contains an argument with type <codeEntityReference qualifyHint="false">T:SecretNest.RemoteAgency.AssemblyRequestingEventArgs</codeEntityReference>. The event handler should load the image of the assembly specified and call the method <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteAgency.AssemblyRequestingEventArgs.Load(System.Byte[])</codeEntityReference> from the argument.</para>
        <para>This is the final chance to fix the assembly missing problem. If the event handler is missing, or method Load is not called before returning, compiling will not be finished successfully.</para>
      </content>
    </section>
        
    <relatedTopics>
      <link xlink:href="ecc78678-d7a8-41b7-94ce-8743add59236"/>
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
