<?xml version="1.0" encoding="utf-8" ?>
<examples>
  <item id="Example0#Interface">
    <sampleCode language="CSharp">
public interface ITest0
{
    void Hello();
}
    </sampleCode>
    <sampleCode language="VisualBasic">
Public Interface ITest0
  Sub Hello()
End Interface
    </sampleCode>
  </item>

  <item id="Example0#Server">
    <sampleCode language="CSharp">
public class Server0 : ITest0
{
    public void Hello()
    {
        Console.WriteLine("Hello world.");
    }
}
    </sampleCode>
    <sampleCode language="VisualBasic">
Public Class Server0
  Implements ITest0

  Public Sub Hello() Implements ITest0.Hello
    Console.WriteLine("Hello world.")
  End Sub
End Class
    </sampleCode>
  </item>

  <item id="Example0#Test">
    <sampleCode language="CSharp">
//test router
var router = new RemoteAgencyRouter&lt;byte[], object&gt;();

//Server
var originalService = new Server0();
using var serverRemoteAgencyInstance = RemoteAgencyBase.CreateWithBinarySerializer(true);
router.AddRemoteAgencyInstance(serverRemoteAgencyInstance);
var serverSiteId = serverRemoteAgencyInstance.SiteId;
var serviceWrapperInstanceId = serverRemoteAgencyInstance.CreateServiceWrapper(originalService);

//Client
using var clientRemoteAgencyInstance = RemoteAgencyBase.CreateWithBinarySerializer(true);
router.AddRemoteAgencyInstance(clientRemoteAgencyInstance);
var clientProxy = clientRemoteAgencyInstance.CreateProxy&lt;ITest0&gt;(serverSiteId, serviceWrapperInstanceId).ProxyGeneric;

//Run test
clientProxy.Hello();

Console.Write("Press any key to continue...");
Console.ReadKey(true);
Console.WriteLine();
    </sampleCode>
    <sampleCode language="VisualBasic">
'test router
Dim router = New RemoteAgencyRouter(Of Byte(), Object)

'Server
Dim originalService As New Server0()
Dim serverRemoteAgencyInstance = RemoteAgencyBase.CreateWithBinarySerializer(True)
router.AddRemoteAgencyInstance(serverRemoteAgencyInstance)
Dim serverSiteId = serverRemoteAgencyInstance.SiteId
Dim serviceWrapperInstanceId = serverRemoteAgencyInstance.CreateServiceWrapper(originalService)

'Client
Dim clientRemoteAgencyInstance = RemoteAgencyBase.CreateWithBinarySerializer(True)
router.AddRemoteAgencyInstance(clientRemoteAgencyInstance)
Dim clientProxy = clientRemoteAgencyInstance.CreateProxy(Of ITest0)(serverSiteId, serviceWrapperInstanceId).ProxyGeneric

'Run test
clientProxy.Hello()

Console.Write("Press any key to continue...")
Console.ReadKey(True)
Console.WriteLine()

serverRemoteAgencyInstance.Dispose()
clientRemoteAgencyInstance.Dispose()
    </sampleCode>
  </item>
</examples>

