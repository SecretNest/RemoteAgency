<?xml version="1.0" encoding="utf-8" ?>
<!-- This is an example code snippets file -->
<examples>
  <item id="Example10#Attribute">
    <sampleCode language="CSharp">
      [AttributeUsage(AttributeTargets.Method)]
      public sealed class MyOwnAttribute : Attribute
      {
        public string MyProperty { get; set; }
        public int MyField;
        public string AFromCtor { get; }
        public int BFromCtor { get; } 
        public bool CFromCtor { get; }

        public MyOwnAttribute(string a, int b = 0, bool c = false)
        {
          AFromCtor = a;
          BFromCtor = b;
          CFromCtor = c;
        }
      }
    </sampleCode>
    <sampleCode language="VisualBasic">
      &lt;AttributeUsage(AttributeTargets.Method)&gt;
      Public NotInheritable Class MyOwnAttribute
          Inherits Attribute
          Public Property MyProperty As String
          Public MyField As Integer
          Public ReadOnly Property AFromCtor As String
          Public ReadOnly Property BFromCtor As Integer
          Public ReadOnly Property CFromCtor As Boolean

          Sub New(a As String, Optional b As Integer = 0, Optional c As Boolean = False)
              AFromCtor = a
              BFromCtor = b
              CFromCtor = c
          End Sub
      End Class
    </sampleCode>
  </item>

  <item id="Example10#Interface">
    <sampleCode language="CSharp">
      public interface ITest10
      {
        [AttributePassThrough(typeof(MyOwnAttribute),
          new[] {typeof(string), typeof(int), typeof(bool)},
          new object[] {"ValueOfA"},
          "ThisIsMyMethod")]
        [AttributePassThroughIndexBasedParameter("ThisIsMyMethod", 2, true)]
        [AttributePassThroughProperty("ThisIsMyMethod", nameof(MyOwnAttribute.MyProperty), "PropertyValue")]
        [AttributePassThroughField("ThisIsMyMethod", nameof(MyOwnAttribute.MyField), 123)]
        void MyMethod();
      }
    </sampleCode>
    <sampleCode language="VisualBasic">
      Public Interface ITest10
        &lt;AttributePassThrough(GetType(MyOwnAttribute), New Type() {GetType(String), GetType(Integer), GetType(Boolean)}, New Object() {"ValueOfA"}, "ThisIsMyMethod")&gt;
        &lt;AttributePassThroughIndexBasedParameter("ThisIsMyMethod", 2, True)&gt;
        &lt;AttributePassThroughProperty("ThisIsMyMethod", NameOf(MyOwnAttribute.MyProperty), "PropertyValue")&gt;
        &lt;AttributePassThroughField("ThisIsMyMethod", NameOf(MyOwnAttribute.MyField), 123)&gt;
        Sub MyMethod()
      End Interface
    </sampleCode>
  </item>

  <item id="Example10#Proxy">
    <sampleCode language="CSharp">
      public class MyService_Proxy : IMyService
      {
        [MyOwn("ValueOfA", c: true, MyProperty = "PropertyValue", MyField = 123)]
        public void MyMethod()
        {
          //...
        }
      }
    </sampleCode>
    <sampleCode language="VisualBasic">
      Public Class MyService_Proxy
        Implements IMyService

        &lt;MyOwn("ValueOfA", , True, MyProperty:="PropertyValue", MyField:=123)&gt;
        Public Sub MyMethod() Implements IMyService.MyMethod
          '...
        End Sub
      End Class
    </sampleCode>
  </item>
</examples>

