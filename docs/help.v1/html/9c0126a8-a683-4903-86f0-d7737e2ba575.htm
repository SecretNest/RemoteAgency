<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>3 Method with two way property and overload.</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="9c0126a8-a683-4903-86f0-d7737e2ba575" /><meta name="Description" content="Sometimes, we need the target side to provide some value to some property of a parameter. When using this designing in a serialized calling solution, we need to specified the requirement by using T:SecretNest.RemoteAgency.Attributes." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Remote Agency<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e572b781-93d2-4e52-afb1-8ce06607856b.htm" title="Remote Agency" tocid="roottoc">Remote Agency</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2fe3f60f-7261-4cb5-826b-b84bfeab6a3e.htm" title="How to" tocid="2fe3f60f-7261-4cb5-826b-b84bfeab6a3e">How to</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/c84610d8-63f7-48b7-aa35-3a66c03859a1.htm" title="Example: Use Remote Agency" tocid="c84610d8-63f7-48b7-aa35-3a66c03859a1">Example: Use Remote Agency</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d4df62b1-2c8f-471a-bc08-931e0bb21b0a.htm" title="1 Hello World" tocid="d4df62b1-2c8f-471a-bc08-931e0bb21b0a">1 Hello World</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/222b9528-0832-45f0-9eff-b6fc496212cb.htm" title="2 Method with parameter, ref, out and return." tocid="222b9528-0832-45f0-9eff-b6fc496212cb">2 Method with parameter, ref, out and return.</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/9c0126a8-a683-4903-86f0-d7737e2ba575.htm" title="3 Method with two way property and overload." tocid="9c0126a8-a683-4903-86f0-d7737e2ba575">3 Method with two way property and overload.</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fbcae2ec-4424-4fbb-82bb-0459c841eec5.htm" title="4 Generic method" tocid="fbcae2ec-4424-4fbb-82bb-0459c841eec5">4 Generic method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b087c8c6-40f9-41de-adc1-16c90ef8e25d.htm" title="5 Property" tocid="b087c8c6-40f9-41de-adc1-16c90ef8e25d">5 Property</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d33e44c6-26cb-4396-880d-dfd3bb4783b1.htm" title="6 Multiple contracts" tocid="d33e44c6-26cb-4396-880d-dfd3bb4783b1">6 Multiple contracts</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/824b7af8-08c6-493d-b694-e05bfe64b753.htm" title="7 Event" tocid="824b7af8-08c6-493d-b694-e05bfe64b753">7 Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/94ec2756-b127-468a-8c6f-ce18bbefbafb.htm" title="8 Advanced event" tocid="94ec2756-b127-468a-8c6f-ce18bbefbafb">8 Advanced event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/428d92df-fe3a-4290-aac9-e39cc8ed8936.htm" title="9 Event with multiple clients" tocid="428d92df-fe3a-4290-aac9-e39cc8ed8936">9 Event with multiple clients</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/28b771ff-e4f5-4350-9339-200b2ba02f86.htm" title="10 Message Filtering and Metadata" tocid="28b771ff-e4f5-4350-9339-200b2ba02f86">10 Message Filtering and Metadata</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>3 Method with two way property and overload.</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>Sometimes, we need the target side to provide some value to some property of a parameter. When using this designing in a serialized calling solution, we need to specified the requirement by using <a href="20cd2d0c-c682-9f86-e4a1-ae2877c7e176.htm">ParameterTwoWayPropertyAttribute</a> let the Remote Agency send the property back to the caller side.</p><p>Many serialization solution, like WCF, won't support method overloads. One reason is methods with same name will leading to duplicated names of parameter entity, result entity and message. In Remote Agency, this is supported, but you need to specified another asset name by using <a href="c1126b53-63c2-baf7-ee23-8684e1f02609.htm">CustomizedAssetNameAttribute</a>.</p></div><h3 class="procedureSubHeading">Method with two way property and overload.</h3><div class="subSection"><ol><li><p>Define a service contract interface and the entity class used.</p><p>[DataContract] and [DataMember] are added because Data Contract Serializer is chosen in this example.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAEADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Runtime.Serialization;
<span class="highlight-keyword">using</span> SecretNest.RemoteAgency.Attributes;

[DataContract]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Parameter
{
  [DataMember] <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> MyValue { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IHello
{
  <span class="highlight-keyword">string</span> NormalMethod(Parameter parameter, <span class="highlight-keyword">ref</span> <span class="highlight-keyword">string</span> refParameter, <span class="highlight-keyword">out</span> <span class="highlight-keyword">int</span> outParameter);
  [CustomizedAssetName(<span class="highlight-literal">"TwoWayMethod"</span>)]
  <span class="highlight-keyword">void</span> NormalMethod([ParameterTwoWayProperty(<span class="highlight-literal">"MyValue"</span>)] Parameter parameter, <span class="highlight-keyword">string</span> newValue);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEADAAA");</script></li><li><p>Create the service class.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> Hello : IHello
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> NormalMethod(Parameter parameter, <span class="highlight-keyword">ref</span> <span class="highlight-keyword">string</span> refParameter, <span class="highlight-keyword">out</span> <span class="highlight-keyword">int</span> outParameter)
  {
    refParameter += <span class="highlight-literal">"Changed"</span>;
    outParameter = <span class="highlight-number">100</span>;
    <span class="highlight-keyword">return</span> parameter.MyValue;
  }

  <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> NormalMethod(Parameter parameter, <span class="highlight-keyword">string</span> newValue)
  {
    parameter.MyValue = newValue;
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADADAAA");</script></li><li><p>In Main method, define the service object, create a service wrapper and put it into server site.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Hello serviceObject = <span class="highlight-keyword">new</span> Hello();
<span class="highlight-comment">//Because we are using easy encapsulation, all creators, serializing helpers, packing helpers and entity code builders are encapsulated into just one call.</span>
serverSite.AddServiceWrapper&lt;IHello&gt;(serviceObject, <span class="highlight-keyword">out</span> Guid serviceWrapperInstanceId);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACADAAA");</script></li><li><p>In Main method, create a proxy object and put it into client site.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IHello proxy = clientSite.AddProxy&lt;IHello&gt;(serviceWrapperInstanceId, <span class="highlight-keyword">out</span> _);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABADAAA");</script></li><li><p>In Main method, call the method of proxy.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Parameter parameter = <span class="highlight-keyword">new</span> Parameter() { MyValue = <span class="highlight-literal">"ParameterValue"</span> };
<span class="highlight-keyword">string</span> refParameter = <span class="highlight-literal">"RefValue"</span>;
<span class="highlight-keyword">var</span> result = proxy.NormalMethod(parameter, <span class="highlight-keyword">ref</span> refParameter, <span class="highlight-keyword">out</span> <span class="highlight-keyword">int</span> outParameter);
<span class="highlight-keyword">if</span> (result == <span class="highlight-literal">"ParameterValue"</span> &amp;&amp; refParameter == <span class="highlight-literal">"RefValueChanged"</span> &amp;&amp; outParameter == <span class="highlight-number">100</span>)
  Console.WriteLine(<span class="highlight-literal">"NormalMethod In Example 2: Pass."</span>);

proxy.NormalMethod(parameter, <span class="highlight-literal">"NewValue"</span>);
<span class="highlight-keyword">if</span> (parameter.MyValue == <span class="highlight-literal">"NewValue"</span>)
  Console.WriteLine(<span class="highlight-literal">"NormalMethod TwoWay: Pass."</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAADAAA");</script></li></ol></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Used Attributes</span></div><div id="ID1RBSection" class="collapsibleSection"><ul class="noBullet"><li><p>CustomizedAssetName</p><p>Normally, Remote Agency use the name of the asset (method, event, property) as the asset name. Asset name is used in message, as well as name of parameter and return entity class.</p><p>You can always specify another name using <a href="20cd2d0c-c682-9f86-e4a1-ae2877c7e176.htm">ParameterTwoWayPropertyAttribute</a>. While using this, make sure the asset names are not clashed with each other, including the names specified default.</p><p>This attribute can be used on methods, events and properties.</p></li><li><p>ParameterTwoWayProperty</p><p>Use <a href="20cd2d0c-c682-9f86-e4a1-ae2877c7e176.htm">ParameterTwoWayPropertyAttribute</a> when the caller side need some property to be transferred back.</p><p>ParameterTwoWayProperty has two constructor.</p><ul><li><p>If the parameter is simple, not an array or enumerable, and the whole property is required to be transferred back, use the constructor with only property name specified. Entity property name is optional, a default name will be generated if absents.</p></li><li><p>If the parameter is an array or enumerable, or you need to specified some sub-property, or from one value of some indexed-based property, use the constructor with path, type and entity property name.</p><p>Path is the code in C# for accessing the exactly node you required, starting with dot or the index of the parameter, e.g. ".MyValues[5]", ".Entity.Title", "[100].Name", etc.</p><p>Type is the data type of the node you pointed to.</p><p>Entity property name is required. This name will be used as a property name in the return entity class.</p></li></ul><p>This attributes can be used on parameter of methods and the delegate for events.</p><p>You can also use <a href="a6900a14-552d-0a3d-b62b-366621e27b96.htm">EventParameterTwoWayPropertyAttribute</a> on events which has the similar functions and higher priority than defined in delegate. A parameter name is required while using EventParameterTwoWayPropertyAttribute.</p></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Source code package</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          All examples can code can be fetched on <a href="https://github.com/SecretNest/RemoteAgency" target="_blank">Github</a>.
        </p><p>
          Code file of this example: <a href="https://github.com/SecretNest/RemoteAgency/tree/v1/Examples/CSharpExample/Example%203/Program.cs" target="_blank">Github C#</a></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="c84610d8-63f7-48b7-aa35-3a66c03859a1.htm">Example: Use Remote Agency</a></div></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>