<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="SecretNest.RemoteAgency.Abstraction">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="SecretNest.RemoteAgency">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:SecretNest.RemoteAgency">
      <apidata name="SecretNest.RemoteAgency" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.AccessingTimeOutException" />
        <element api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" />
        <element api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" />
        <element api="T:SecretNest.RemoteAgency.CreateEmptyMessageCallback" />
        <element api="T:SecretNest.RemoteAgency.AssetNotFoundException" />
        <element api="T:SecretNest.RemoteAgency.IgnoredAssetException" />
        <element api="T:SecretNest.RemoteAgency.InstanceNotFoundException" />
        <element api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" />
        <element api="T:SecretNest.RemoteAgency.IProxyCommunicate" />
        <element api="T:SecretNest.RemoteAgency.EntityBuilding" />
        <element api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" />
        <element api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" />
        <element api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" />
        <element api="T:SecretNest.RemoteAgency.MessageType" />
        <element api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" />
        <element api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" />
        <element api="T:SecretNest.RemoteAgency.EntityProperty" />
        <element api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" />
        <element api="T:SecretNest.RemoteAgency.AttributePosition" />
        <element api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
        <element api="T:SecretNest.RemoteAgency.CreatedProxy" />
        <element api="T:SecretNest.RemoteAgency.CreatedProxy`1" />
        <element api="T:SecretNest.RemoteAgency.RemoteAgencyBase" />
        <element api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
        <element api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" />
        <element api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" />
        <element api="T:SecretNest.RemoteAgency.MessageDirection" />
        <element api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
        <element api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" />
        <element api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" />
        <element api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" />
        <element api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
        <element api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.AccessingTimeOutException">
      <apidata name="AccessingTimeOutException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.TimeoutException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.AccessingTimeOutException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="M:SecretNest.RemoteAgency.AccessingTimeOutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.AccessingTimeOutException.OriginalMessage" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AccessingTimeOutException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="originalMessage">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AccessingTimeOutException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AccessingTimeOutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AccessingTimeOutException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AccessingTimeOutException.OriginalMessage">
      <apidata name="OriginalMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalMessage" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AccessingTimeOutException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.AssetNotFoundException">
      <apidata name="AssetNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.AssetNotFoundException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="M:SecretNest.RemoteAgency.AssetNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.AssetNotFoundException.ToString" />
        <element api="P:SecretNest.RemoteAgency.AssetNotFoundException.OriginalMessage" />
        <element api="P:SecretNest.RemoteAgency.AssetNotFoundException.AssetName" />
        <element api="P:SecretNest.RemoteAgency.AssetNotFoundException.MessageType" />
        <element api="P:SecretNest.RemoteAgency.AssetNotFoundException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssetNotFoundException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="originalMessage">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssetNotFoundException.AssetName">
      <apidata name="AssetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssetNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssetNotFoundException.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssetNotFoundException.MessageType">
      <apidata name="MessageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageType" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssetNotFoundException.OriginalMessage">
      <apidata name="OriginalMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalMessage" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssetNotFoundException.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AssetNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.AttributePosition">
      <apidata name="AttributePosition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.AttributePosition.ReturnValue" />
        <element api="F:SecretNest.RemoteAgency.AttributePosition.Parameter" />
        <element api="F:SecretNest.RemoteAgency.AttributePosition.FieldOfParameter" />
        <element api="F:SecretNest.RemoteAgency.AttributePosition.PropertyOfParameter" />
        <element api="F:SecretNest.RemoteAgency.AttributePosition.PropertyOfHelper" />
        <element api="F:SecretNest.RemoteAgency.AttributePosition.AssetProperty" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.AssetProperty">
      <apidata name="AssetProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.FieldOfParameter">
      <apidata name="FieldOfParameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.Parameter">
      <apidata name="Parameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.PropertyOfHelper">
      <apidata name="PropertyOfHelper" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.PropertyOfParameter">
      <apidata name="PropertyOfParameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AttributePosition.ReturnValue">
      <apidata name="ReturnValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2">
      <apidata name="BeforeMessageProcessingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSerialized" />
        <template name="TEntityBase" />
      </templates>
      <implements>
        <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.Serialize" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.#ctor(SecretNest.RemoteAgency.MessageDirection,`1,System.Func{`1,`0})" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.MessageBody" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.IncludeTerminatedMessageInException" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.MessageBodyGeneric" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToContinue" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateAndReturnException(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithException(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithExceptionAndReturn(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateSilently" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageOfMessageProcessTerminatedException" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageDirection" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.#ctor(SecretNest.RemoteAgency.MessageDirection,`1,System.Func{`1,`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="messageDirection">
          <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
        </parameter>
        <parameter name="messageBody">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
        </parameter>
        <parameter name="serializerCallback">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.IncludeTerminatedMessageInException">
      <apidata name="IncludeTerminatedMessageInException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeTerminatedMessageInException" />
      <setter name="set_IncludeTerminatedMessageInException" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.MessageBody">
      <apidata name="MessageBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MessageBody" />
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.MessageBody">
          <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.MessageBodyGeneric">
      <apidata name="MessageBodyGeneric" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageBodyGeneric">
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MessageBodyGeneric" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2.Serialize">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
      </returns>
      <implements>
        <member api="M:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.Serialize">
          <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase">
      <apidata name="BeforeMessageProcessingEventArgsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToContinue" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateAndReturnException(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithException(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithExceptionAndReturn(System.String)" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateSilently" />
        <element api="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.#ctor(SecretNest.RemoteAgency.MessageDirection)" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageOfMessageProcessTerminatedException" />
        <element api="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageDirection" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageBodyGeneric" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.#ctor(SecretNest.RemoteAgency.MessageDirection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="messageDirection">
          <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.FurtherProcessing">
      <apidata name="FurtherProcessing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FurtherProcessing" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageDirection">
      <apidata name="MessageDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageDirection" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.MessageOfMessageProcessTerminatedException">
      <apidata name="MessageOfMessageProcessTerminatedException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageOfMessageProcessTerminatedException" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToContinue">
      <apidata name="SetToContinue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithException(System.String)">
      <apidata name="SetToReplaceWithException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Remote Agency Manager terminated this message processing due to user request.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToReplaceWithExceptionAndReturn(System.String)">
      <apidata name="SetToReplaceWithExceptionAndReturn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Remote Agency Manager terminated this message processing due to user request.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateAndReturnException(System.String)">
      <apidata name="SetToTerminateAndReturnException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Remote Agency Manager terminated this message processing due to user request.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase.SetToTerminateSilently">
      <apidata name="SetToTerminateSilently" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.CreatedProxy">
      <apidata name="CreatedProxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.CreatedProxy`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.CreatedProxy.#ctor(System.Guid,System.Object)" />
        <element api="P:SecretNest.RemoteAgency.CreatedProxy.InstanceId" />
        <element api="P:SecretNest.RemoteAgency.CreatedProxy.Proxy" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.CreatedProxy.#ctor(System.Guid,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.CreatedProxy.InstanceId">
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.CreatedProxy.Proxy">
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Proxy" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.CreatedProxy`1">
      <apidata name="CreatedProxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TInterface" />
      </templates>
      <elements>
        <element api="M:SecretNest.RemoteAgency.CreatedProxy`1.#ctor(System.Guid,`0)" />
        <element api="P:SecretNest.RemoteAgency.CreatedProxy`1.ProxyGeneric" />
        <element api="P:SecretNest.RemoteAgency.CreatedProxy.InstanceId" />
        <element api="P:SecretNest.RemoteAgency.CreatedProxy.Proxy" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.CreatedProxy`1.#ctor(System.Guid,`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="proxy">
          <template name="TInterface" index="0" api="T:SecretNest.RemoteAgency.CreatedProxy`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.CreatedProxy`1" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.CreatedProxy`1.ProxyGeneric">
      <apidata name="ProxyGeneric" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProxyGeneric" />
      <returns>
        <template name="TInterface" index="0" api="T:SecretNest.RemoteAgency.CreatedProxy`1" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.CreatedProxy`1" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.CreateEmptyMessageCallback">
      <apidata name="CreateEmptyMessageCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.EntityBuilding">
      <apidata name="EntityBuilding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.EntityBuilding.#ctor(System.String,System.Collections.Generic.IReadOnlyList{SecretNest.RemoteAgency.EntityProperty},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Type[])" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.EntityClassName" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.GenericParameters" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.Properties" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.InterfaceLevelAttributes" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.AssetLevelAttributes" />
        <element api="P:SecretNest.RemoteAgency.EntityBuilding.DelegateLevelAttributes" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityBuilding.#ctor(System.String,System.Collections.Generic.IReadOnlyList{SecretNest.RemoteAgency.EntityProperty},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Collections.Generic.IReadOnlyList{System.Attribute},System.Type[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="interfaceLevelAttributes">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:System.Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assetLevelAttributes">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:System.Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delegateLevelAttributes">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:System.Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="genericParameters">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.AssetLevelAttributes">
      <apidata name="AssetLevelAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssetLevelAttributes" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.DelegateLevelAttributes">
      <apidata name="DelegateLevelAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DelegateLevelAttributes" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.EntityClassName">
      <apidata name="EntityClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.GenericParameters">
      <apidata name="GenericParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericParameters" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.InterfaceLevelAttributes">
      <apidata name="InterfaceLevelAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InterfaceLevelAttributes" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityBuilding.Properties">
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.EntityProperty">
      <apidata name="EntityProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.EntityProperty.#ctor(System.Type,System.String,System.Collections.Generic.IReadOnlyList{SecretNest.RemoteAgency.EntityPropertyAttribute})" />
        <element api="P:SecretNest.RemoteAgency.EntityProperty.Type" />
        <element api="P:SecretNest.RemoteAgency.EntityProperty.Name" />
        <element api="P:SecretNest.RemoteAgency.EntityProperty.Attributes" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityProperty.#ctor(System.Type,System.String,System.Collections.Generic.IReadOnlyList{SecretNest.RemoteAgency.EntityPropertyAttribute})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityProperty.Attributes">
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityProperty.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityProperty.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityProperty" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.EntityPropertyAttribute">
      <apidata name="EntityPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.EntityPropertyAttribute.#ctor(SecretNest.RemoteAgency.AttributePosition,System.Attribute)" />
        <element api="P:SecretNest.RemoteAgency.EntityPropertyAttribute.Position" />
        <element api="P:SecretNest.RemoteAgency.EntityPropertyAttribute.Attribute" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityPropertyAttribute.#ctor(SecretNest.RemoteAgency.AttributePosition,System.Attribute)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="position">
          <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityPropertyAttribute.Attribute">
      <apidata name="Attribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attribute" />
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityPropertyAttribute.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Position" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AttributePosition" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.EntityTypeBuilderBase">
      <apidata name="EntityTypeBuilderBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
          <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)" />
        <element api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.CreateEmptyMessage" />
        <element api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.#ctor" />
        <element api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.InterfaceLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.AssetLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.DelegateLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.ParameterLevelAttributeBaseType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.AssetLevelAttributeBaseType">
      <apidata name="AssetLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AssetLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)">
      <apidata name="BuildEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="typeBuilder">
          <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
        </parameter>
        <parameter name="entityBuilding">
          <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.CreateEmptyMessage">
      <apidata name="CreateEmptyMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.DelegateLevelAttributeBaseType">
      <apidata name="DelegateLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DelegateLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.InterfaceLevelAttributeBaseType">
      <apidata name="InterfaceLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InterfaceLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.ParameterLevelAttributeBaseType">
      <apidata name="ParameterLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParameterLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs">
      <apidata name="ExceptionRedirectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.#ctor(System.Type,System.Guid,System.String,System.Exception)" />
        <element api="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.ServiceContractInterface" />
        <element api="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.InstanceId" />
        <element api="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.AssetName" />
        <element api="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.RedirectedException" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.#ctor(System.Type,System.Guid,System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceContractInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.AssetName">
      <apidata name="AssetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.InstanceId">
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.RedirectedException">
      <apidata name="RedirectedException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RedirectedException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs.ServiceContractInterface">
      <apidata name="ServiceContractInterface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceContractInterface" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IgnoredAssetException">
      <apidata name="IgnoredAssetException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.InvalidOperationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:SecretNest.RemoteAgency.IgnoredAssetException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IgnoredAssetException.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IgnoredAssetException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IManagedObjectCommunicate">
      <apidata name="IManagedObjectCommunicate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </implementors>
      <elements>
        <element api="M:SecretNest.RemoteAgency.IManagedObjectCommunicate.CloseRequestedByManagingObject(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.SendOneWaySpecialCommandMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.CreateEmptyMessageCallback" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IManagedObjectCommunicate.CloseRequestedByManagingObject(System.Boolean)">
      <apidata name="CloseRequestedByManagingObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sendSpecialCommand">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.CreateEmptyMessageCallback">
      <apidata name="CreateEmptyMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CreateEmptyMessageCallback" />
      <setter name="set_CreateEmptyMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreateEmptyMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.SendOneWaySpecialCommandMessageCallback">
      <apidata name="SendOneWaySpecialCommandMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendOneWaySpecialCommandMessageCallback" />
      <setter name="set_SendOneWaySpecialCommandMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2">
      <apidata name="IMessageBodyGenericEventArgs" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSerialized">
          <variance covariant="true" />
        </template>
        <template name="TEntityBase">
          <variance covariant="true" />
        </template>
      </templates>
      <implementors>
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.Serialize" />
        <element api="P:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.MessageBody" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.MessageBody">
      <apidata name="MessageBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MessageBody" />
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.Serialize">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.InstanceNotFoundException">
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.NullReferenceException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.InstanceNotFoundException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Guid)" />
        <element api="M:SecretNest.RemoteAgency.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.InstanceNotFoundException.ToString" />
        <element api="P:SecretNest.RemoteAgency.InstanceNotFoundException.OriginalMessage" />
        <element api="P:SecretNest.RemoteAgency.InstanceNotFoundException.InstanceId" />
        <element api="P:SecretNest.RemoteAgency.InstanceNotFoundException.ExceptionThrownSiteId" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.InstanceNotFoundException.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="originalMessage">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="exceptionThrownSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.InstanceNotFoundException.ExceptionThrownSiteId">
      <apidata name="ExceptionThrownSiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExceptionThrownSiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.InstanceNotFoundException.InstanceId">
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.InstanceNotFoundException.OriginalMessage">
      <apidata name="OriginalMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalMessage" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.InstanceNotFoundException.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IProxyCommunicate">
      <apidata name="IProxyCommunicate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.IProxyCommunicate.ProcessEventRaisingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IProxyCommunicate.ProcessOneWayEventRaisingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IProxyCommunicate.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.InstanceId" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendMethodMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayMethodMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendEventAddingMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendEventRemovingMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendPropertyGetMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayPropertyGetMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendPropertySetMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayPropertySetMessageCallback" />
        <element api="M:SecretNest.RemoteAgency.IManagedObjectCommunicate.CloseRequestedByManagingObject(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.SendOneWaySpecialCommandMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.CreateEmptyMessageCallback" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.InstanceId">
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceId" />
      <setter name="set_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IProxyCommunicate.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteServiceWrapperClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="serviceWrapperInstanceId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IProxyCommunicate.ProcessEventRaisingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessEventRaisingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IProxyCommunicate.ProcessOneWayEventRaisingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessOneWayEventRaisingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendEventAddingMessageCallback">
      <apidata name="SendEventAddingMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendEventAddingMessageCallback" />
      <setter name="set_SendEventAddingMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendEventRemovingMessageCallback">
      <apidata name="SendEventRemovingMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendEventRemovingMessageCallback" />
      <setter name="set_SendEventRemovingMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendMethodMessageCallback">
      <apidata name="SendMethodMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendMethodMessageCallback" />
      <setter name="set_SendMethodMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayMethodMessageCallback">
      <apidata name="SendOneWayMethodMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendOneWayMethodMessageCallback" />
      <setter name="set_SendOneWayMethodMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayPropertyGetMessageCallback">
      <apidata name="SendOneWayPropertyGetMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendOneWayPropertyGetMessageCallback" />
      <setter name="set_SendOneWayPropertyGetMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendOneWayPropertySetMessageCallback">
      <apidata name="SendOneWayPropertySetMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendOneWayPropertySetMessageCallback" />
      <setter name="set_SendOneWayPropertySetMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendPropertyGetMessageCallback">
      <apidata name="SendPropertyGetMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendPropertyGetMessageCallback" />
      <setter name="set_SendPropertyGetMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IProxyCommunicate.SendPropertySetMessageCallback">
      <apidata name="SendPropertySetMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendPropertySetMessageCallback" />
      <setter name="set_SendPropertySetMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IProxyCommunicate" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IRemoteAgencyMessage">
      <apidata name="IRemoteAgencyMessage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage" ref="true" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage" ref="true" />
      </implementors>
      <elements>
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.MessageType" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.AssetName" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.MessageId" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.Exception" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.IsEmptyMessage" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.AssetName">
      <apidata name="AssetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AssetName" />
      <setter name="set_AssetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.IsEmptyMessage">
      <apidata name="IsEmptyMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsEmptyMessage" />
      <setter name="set_IsEmptyMessage" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.IsOneWay">
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.MessageId">
      <apidata name="MessageId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageId" />
      <setter name="set_MessageId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.MessageType">
      <apidata name="MessageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageType" />
      <setter name="set_MessageType" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.SenderInstanceId">
      <apidata name="SenderInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SenderInstanceId" />
      <setter name="set_SenderInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.SenderSiteId">
      <apidata name="SenderSiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SenderSiteId" />
      <setter name="set_SenderSiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.TargetInstanceId">
      <apidata name="TargetInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetInstanceId" />
      <setter name="set_TargetInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IRemoteAgencyMessage.TargetSiteId">
      <apidata name="TargetSiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetSiteId" />
      <setter name="set_TargetSiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate">
      <apidata name="IServiceWrapperCommunicate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:SecretNest.RemoteAgency.IManagedObjectCommunicate" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessMethodMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayMethodMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessEventAddingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessEventRemovingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessPropertyGettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayPropertyGettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessPropertySettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayPropertySettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)" />
        <element api="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="P:SecretNest.RemoteAgency.IServiceWrapperCommunicate.SendEventMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IServiceWrapperCommunicate.SendOneWayEventMessageCallback" />
        <element api="M:SecretNest.RemoteAgency.IManagedObjectCommunicate.CloseRequestedByManagingObject(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.SendOneWaySpecialCommandMessageCallback" />
        <element api="P:SecretNest.RemoteAgency.IManagedObjectCommunicate.CreateEmptyMessageCallback" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteProxyClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="proxyInstanceId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessEventAddingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessEventAddingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessEventRemovingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessEventRemovingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessMethodMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessMethodMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayMethodMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessOneWayMethodMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayPropertyGettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessOneWayPropertyGettingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessOneWayPropertySettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessOneWayPropertySettingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessPropertyGettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessPropertyGettingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.IServiceWrapperCommunicate.ProcessPropertySettingMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage,System.Exception@,SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode@)">
      <apidata name="ProcessPropertySettingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="localExceptionHandlingMode" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IServiceWrapperCommunicate.SendEventMessageCallback">
      <apidata name="SendEventMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendEventMessageCallback" />
      <setter name="set_SendEventMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.IServiceWrapperCommunicate.SendOneWayEventMessageCallback">
      <apidata name="SendOneWayEventMessageCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SendOneWayEventMessageCallback" />
      <setter name="set_SendOneWayEventMessageCallback" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.SendOneWayMessageCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.IServiceWrapperCommunicate" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageBodyEventArgs">
      <apidata name="MessageBodyEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.MessageBodyEventArgs.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgs.MessageBodyGeneric" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageBodyEventArgs.#ctor(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="messageBodyGeneric">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgs.MessageBodyGeneric">
      <apidata name="MessageBodyGeneric" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageBodyGeneric">
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MessageBodyGeneric" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2">
      <apidata name="MessageBodyEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSerialized" />
        <template name="TEntityBase" />
      </templates>
      <implements>
        <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.MessageBodyEventArgs`2.Serialize" />
        <element api="M:SecretNest.RemoteAgency.MessageBodyEventArgs`2.#ctor(`1,System.Func{`1,`0})" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgs`2.MessageBody" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgs.MessageBodyGeneric" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageBodyEventArgs`2.#ctor(`1,System.Func{`1,`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="messageBody">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
        </parameter>
        <parameter name="serializerCallback">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgs`2.MessageBody">
      <apidata name="MessageBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MessageBody" />
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.MessageBody">
          <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageBodyEventArgs`2.Serialize">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
      </returns>
      <implements>
        <member api="M:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2.Serialize">
          <type api="T:SecretNest.RemoteAgency.IMessageBodyGenericEventArgs`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase">
      <apidata name="MessageBodyEventArgsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgsBase" ref="true" />
          <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.MessageBodyEventArgsBase.#ctor" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage" />
        <element api="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageBodyGeneric" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageBodyEventArgsBase.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.AssetName">
      <apidata name="AssetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsEmptyMessage">
      <apidata name="IsEmptyMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmptyMessage" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.IsOneWay">
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageBodyGeneric">
      <apidata name="MessageBodyGeneric" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MessageBodyGeneric" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageId">
      <apidata name="MessageId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.MessageType">
      <apidata name="MessageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageType" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderInstanceId">
      <apidata name="SenderInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SenderInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.SenderSiteId">
      <apidata name="SenderSiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SenderSiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetInstanceId">
      <apidata name="TargetInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageBodyEventArgsBase.TargetSiteId">
      <apidata name="TargetSiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetSiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgsBase" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageDirection">
      <apidata name="MessageDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.MessageDirection.Receiving" />
        <element api="F:SecretNest.RemoteAgency.MessageDirection.Sending" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageDirection.Receiving">
      <apidata name="Receiving" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageDirection.Sending">
      <apidata name="Sending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageDirection" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageFurtherProcessing">
      <apidata name="MessageFurtherProcessing" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.MessageFurtherProcessing.Continue" />
        <element api="F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateAndReturnException" />
        <element api="F:SecretNest.RemoteAgency.MessageFurtherProcessing.ReplaceWithException" />
        <element api="F:SecretNest.RemoteAgency.MessageFurtherProcessing.ReplaceWithExceptionAndReturn" />
        <element api="F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateSilently" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageFurtherProcessing.Continue">
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageFurtherProcessing.ReplaceWithException">
      <apidata name="ReplaceWithException" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageFurtherProcessing.ReplaceWithExceptionAndReturn">
      <apidata name="ReplaceWithExceptionAndReturn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateAndReturnException">
      <apidata name="TerminateAndReturnException" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageFurtherProcessing.TerminateSilently">
      <apidata name="TerminateSilently" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageFurtherProcessing" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageProcessTerminatedException">
      <apidata name="MessageProcessTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.ToString" />
        <element api="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.#ctor(System.String,SecretNest.RemoteAgency.MessageProcessTerminatedPosition,SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.MessageProcessTerminatedException.TerminatedMessage" />
        <element api="P:SecretNest.RemoteAgency.MessageProcessTerminatedException.TerminatedPosition" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.#ctor(System.String,SecretNest.RemoteAgency.MessageProcessTerminatedPosition,SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="terminatedPosition">
          <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
        </parameter>
        <parameter name="terminatedMessage">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageProcessTerminatedException.TerminatedMessage">
      <apidata name="TerminatedMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TerminatedMessage" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.MessageProcessTerminatedException.TerminatedPosition">
      <apidata name="TerminatedPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TerminatedPosition" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.MessageProcessTerminatedException.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition">
      <apidata name="MessageProcessTerminatedPosition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.MessageProcessTerminatedPosition.BeforeSending" />
        <element api="F:SecretNest.RemoteAgency.MessageProcessTerminatedPosition.AfterReceived" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageProcessTerminatedPosition.AfterReceived">
      <apidata name="AfterReceived" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageProcessTerminatedPosition.BeforeSending">
      <apidata name="BeforeSending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageProcessTerminatedPosition" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.MessageType">
      <apidata name="MessageType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.MessageType.Method" />
        <element api="F:SecretNest.RemoteAgency.MessageType.EventAdd" />
        <element api="F:SecretNest.RemoteAgency.MessageType.EventRemove" />
        <element api="F:SecretNest.RemoteAgency.MessageType.Event" />
        <element api="F:SecretNest.RemoteAgency.MessageType.PropertyGet" />
        <element api="F:SecretNest.RemoteAgency.MessageType.PropertySet" />
        <element api="F:SecretNest.RemoteAgency.MessageType.SpecialCommand" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.Event">
      <apidata name="Event" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.EventAdd">
      <apidata name="EventAdd" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.EventRemove">
      <apidata name="EventRemove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.Method">
      <apidata name="Method" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.PropertyGet">
      <apidata name="PropertyGet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.PropertySet">
      <apidata name="PropertySet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.MessageType.SpecialCommand">
      <apidata name="SpecialCommand" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.RemoteAgency`2">
      <apidata name="RemoteAgency" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSerialized" />
        <template name="TEntityBase" />
      </templates>
      <elements>
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CloseInstance(System.Guid)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CloseAllInstances(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy(System.Type,System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy(System.Type,System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper(System.Type,System.Object,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper(System.Type,System.Object,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.TryPing(System.Guid,System.TimeSpan,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.Create(SecretNest.RemoteAgency.SerializingHelperBase{`0,`1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedSerializedMessage(`0)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedMessage(`1)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessageIds(System.Guid,System.Collections.Generic.List{System.Guid}@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.IRemoteAgencyMessage@,System.DateTime@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessage(System.Guid,System.Guid,`1@,System.DateTime@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.Serialize(`1)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgency`2.Deserialize(`0)" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgency`2.BypassSystemMessagesFromFiltering" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgency`2.MessageForSendingPrepared" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgency`2.BeforeMessageSending" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgency`2.AfterMessageReceived" />
        <element api="F:SecretNest.RemoteAgency.RemoteAgencyBase.EntityTypeBuilder" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseProxy(System.Object)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.TimeSpan,System.Guid@,System.Guid@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.Guid@,System.Guid@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.SetExceptionAsResponse(System.Guid,System.Guid,System.Exception)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryAddTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryRemoveTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryCreateAddSequentialScheduler(System.String,SecretNest.TaskSchedulers.SequentialScheduler@,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultMethodCallingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventAddingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRemovingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRaisingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertyGettingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertySettingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.LoopbackAddressDetection" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.SiteId" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.WaitingTimeForDisposing" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.ExceptionRedirected" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.MessageForSendingPreparedGeneric" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeTypeCreated" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeAssemblyCreated" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.AfterTypeAndAssemblyBuilt" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgency`2.AfterMessageReceived">
      <apidata name="AfterMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AfterMessageReceived" />
      <remover name="remove_AfterMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true">
              <specialization>
                <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
                <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgency`2.BeforeMessageSending">
      <apidata name="BeforeMessageSending" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeMessageSending" />
      <remover name="remove_BeforeMessageSending" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true">
              <specialization>
                <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
                <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.BeforeMessageProcessingEventArgs`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgency`2.BypassSystemMessagesFromFiltering">
      <apidata name="BypassSystemMessagesFromFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassSystemMessagesFromFiltering" />
      <setter name="set_BypassSystemMessagesFromFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CloseAllInstances(System.Boolean)">
      <apidata name="CloseAllInstances" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseAllInstances(System.Boolean)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sendSpecialCommand" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CloseInstance(System.Guid)">
      <apidata name="CloseInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseInstance(System.Guid)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.Create(SecretNest.RemoteAgency.SerializingHelperBase{`0,`1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializingHelper">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
              <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="entityTypeBuilder">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </parameter>
        <parameter name="siteId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy`1" ref="true">
          <specialization>
            <template name="TInterface" index="0" api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy`1" ref="true">
          <specialization>
            <template name="TInterface" index="0" api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy``1(System.Guid,System.Guid,System.Int32,System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy(System.Type,System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateProxy(System.Type,System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Int32,System.Boolean)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper(System.Type,System.Object,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Guid,System.Int32,System.Boolean)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper(System.Type,System.Object,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Int32,System.Boolean)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="serviceObject">
          <template name="TInterface" index="0" api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Guid,System.Int32,System.Boolean)" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="serviceObject">
          <template name="TInterface" index="0" api="M:SecretNest.RemoteAgency.RemoteAgency`2.CreateServiceWrapper``1(``0,System.Int32,System.Boolean)" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.Deserialize(`0)">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serialized">
          <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgency`2.MessageForSendingPrepared">
      <apidata name="MessageForSendingPrepared" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MessageForSendingPrepared" />
      <remover name="remove_MessageForSendingPrepared" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true">
              <specialization>
                <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
                <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteProxyClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="proxyInstanceId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteServiceWrapperClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="serviceWrapperInstanceId">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name="ProcessReceivedMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.ProcessReceivedMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedMessage(`1)">
      <apidata name="ProcessReceivedMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.ProcessReceivedSerializedMessage(`0)">
      <apidata name="ProcessReceivedSerializedMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializedMessage">
          <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.Serialize(`1)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.IRemoteAgencyMessage@,System.DateTime@)">
      <apidata name="TryGetWaitingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.IRemoteAgencyMessage@,System.DateTime@)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="sentMessage" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="startWaiting" out="true">
          <referenceTo>
            <type api="T:System.DateTime" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessage(System.Guid,System.Guid,`1@,System.DateTime@)">
      <apidata name="TryGetWaitingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="sentMessage" out="true">
          <referenceTo>
            <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.RemoteAgency`2" />
          </referenceTo>
        </parameter>
        <parameter name="startWaiting" out="true">
          <referenceTo>
            <type api="T:System.DateTime" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.TryGetWaitingMessageIds(System.Guid,System.Collections.Generic.List{System.Guid}@)">
      <apidata name="TryGetWaitingMessageIds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessageIds(System.Guid,System.Collections.Generic.List{System.Guid}@)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageIds" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Guid" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgency`2.TryPing(System.Guid,System.TimeSpan,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)">
      <apidata name="TryPing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)">
          <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="localProxyInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="maxWaitingTime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="delay" out="true">
          <referenceTo>
            <type api="T:System.TimeSpan" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteSiteId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteInstanceId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.RemoteAgencyBase">
      <apidata name="RemoteAgencyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:SecretNest.RemoteAgency.RemoteAgencyBase.EntityTypeBuilder" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseAllInstances(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseInstance(System.Guid)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseProxy(System.Object)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Guid,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Int32,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.TimeSpan,System.Guid@,System.Guid@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.Guid@,System.Guid@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateSynchronizationContextTaskFactoryFromCurrentThread" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.SetExceptionAsResponse(System.Guid,System.Guid,System.Exception)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.ProcessReceivedMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessageIds(System.Guid,System.Collections.Generic.List{System.Guid}@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.IRemoteAgencyMessage@,System.DateTime@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryAddTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryRemoveTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateWithJsonSerializer(System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateWithBinarySerializer(System.Boolean,System.Nullable{System.Guid})" />
        <element api="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryCreateAddSequentialScheduler(System.String,SecretNest.TaskSchedulers.SequentialScheduler@,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultMethodCallingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventAddingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRemovingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRaisingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertyGettingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertySettingTimeoutForBuilding" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.LoopbackAddressDetection" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.SiteId" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.SynchronizationContextTaskFactory" />
        <element api="P:SecretNest.RemoteAgency.RemoteAgencyBase.WaitingTimeForDisposing" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.ExceptionRedirected" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.MessageForSendingPreparedGeneric" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeTypeCreated" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeAssemblyCreated" />
        <element api="E:SecretNest.RemoteAgency.RemoteAgencyBase.AfterTypeAndAssemblyBuilt" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgencyBase.AfterTypeAndAssemblyBuilt">
      <apidata name="AfterTypeAndAssemblyBuilt" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AfterTypeAndAssemblyBuilt" />
      <remover name="remove_AfterTypeAndAssemblyBuilt" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeAssemblyCreated">
      <apidata name="BeforeAssemblyCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeAssemblyCreated" />
      <remover name="remove_BeforeAssemblyCreated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgencyBase.BeforeTypeCreated">
      <apidata name="BeforeTypeCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeTypeCreated" />
      <remover name="remove_BeforeTypeCreated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseAllInstances(System.Boolean)">
      <apidata name="CloseAllInstances" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sendSpecialCommand" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseInstance(System.Guid)">
      <apidata name="CloseInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CloseProxy(System.Object)">
      <apidata name="CloseProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="proxy">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSerialized" />
        <template name="TEntityBase" />
      </templates>
      <parameters>
        <parameter name="serializingHelper">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <template name="TSerialized" index="0" api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
              <template name="TEntityBase" index="1" api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="entityTypeBuilder">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </parameter>
        <parameter name="siteId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true">
          <specialization>
            <template name="TSerialized" index="0" api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
            <template name="TEntityBase" index="1" api="M:SecretNest.RemoteAgency.RemoteAgencyBase.Create``2(SecretNest.RemoteAgency.SerializingHelperBase{``0,``1},SecretNest.RemoteAgency.EntityTypeBuilderBase,System.Nullable{System.Guid})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateProxy(System.Type,System.Guid,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildServiceWrapperWithProxy" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.CreatedProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Guid,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateServiceWrapper(System.Type,System.Object,System.Int32,System.Boolean)">
      <apidata name="CreateServiceWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="defaultTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>90000</value>
          </argument>
        </parameter>
        <parameter name="buildProxyWithServiceWrapper" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateSynchronizationContextTaskFactoryFromCurrentThread">
      <apidata name="CreateSynchronizationContextTaskFactoryFromCurrentThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateWithBinarySerializer(System.Boolean,System.Nullable{System.Guid})">
      <apidata name="CreateWithBinarySerializer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="securityIssueAcknowledged" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="siteId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.CreateWithJsonSerializer(System.Nullable{System.Guid})">
      <apidata name="CreateWithJsonSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.RemoteAgency`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventAddingTimeoutForBuilding">
      <apidata name="DefaultEventAddingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultEventAddingTimeoutForBuilding" />
      <setter name="set_DefaultEventAddingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRaisingTimeoutForBuilding">
      <apidata name="DefaultEventRaisingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultEventRaisingTimeoutForBuilding" />
      <setter name="set_DefaultEventRaisingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultEventRemovingTimeoutForBuilding">
      <apidata name="DefaultEventRemovingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultEventRemovingTimeoutForBuilding" />
      <setter name="set_DefaultEventRemovingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultMethodCallingTimeoutForBuilding">
      <apidata name="DefaultMethodCallingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultMethodCallingTimeoutForBuilding" />
      <setter name="set_DefaultMethodCallingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertyGettingTimeoutForBuilding">
      <apidata name="DefaultPropertyGettingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultPropertyGettingTimeoutForBuilding" />
      <setter name="set_DefaultPropertyGettingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.DefaultPropertySettingTimeoutForBuilding">
      <apidata name="DefaultPropertySettingTimeoutForBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultPropertySettingTimeoutForBuilding" />
      <setter name="set_DefaultPropertySettingTimeoutForBuilding" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.RemoteAgencyBase.EntityTypeBuilder">
      <apidata name="EntityTypeBuilder" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgencyBase.ExceptionRedirected">
      <apidata name="ExceptionRedirected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExceptionRedirected" />
      <remover name="remove_ExceptionRedirected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.ExceptionRedirectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception)">
      <apidata name="GenerateEmptyMessage" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageType">
          <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
        </parameter>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.GenerateEmptyMessage(System.Guid,System.Guid,System.Guid,SecretNest.RemoteAgency.MessageType,System.String,System.Guid,System.Exception,System.Boolean)">
      <apidata name="GenerateEmptyMessage" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="senderInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetSiteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="targetInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageType">
          <type api="T:SecretNest.RemoteAgency.MessageType" ref="false" />
        </parameter>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="isOneWay">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.LoopbackAddressDetection">
      <apidata name="LoopbackAddressDetection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoopbackAddressDetection" />
      <setter name="set_LoopbackAddressDetection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="E:SecretNest.RemoteAgency.RemoteAgencyBase.MessageForSendingPreparedGeneric">
      <apidata name="MessageForSendingPreparedGeneric" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MessageForSendingPreparedGeneric" />
      <remover name="remove_MessageForSendingPreparedGeneric" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:SecretNest.RemoteAgency.MessageBodyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteProxyClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteProxyClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="proxyInstanceId" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.OnRemoteServiceWrapperClosing(System.Guid,System.Nullable{System.Guid})">
      <apidata name="OnRemoteServiceWrapperClosing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="siteId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="serviceWrapperInstanceId">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.Guid@,System.Guid@)">
      <apidata name="Ping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localProxyInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="remoteSiteId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteInstanceId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.Ping(System.Guid,System.TimeSpan,System.Guid@,System.Guid@)">
      <apidata name="Ping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localProxyInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="maxWaitingTime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="remoteSiteId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteInstanceId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.ProcessReceivedMessage(SecretNest.RemoteAgency.IRemoteAgencyMessage)">
      <apidata name="ProcessReceivedMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.SetExceptionAsResponse(System.Guid,System.Guid,System.Exception)">
      <apidata name="SetExceptionAsResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.SiteId">
      <apidata name="SiteId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SiteId" />
      <setter name="set_SiteId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.SynchronizationContextTaskFactory">
      <apidata name="SynchronizationContextTaskFactory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizationContextTaskFactory" />
      <setter name="set_SynchronizationContextTaskFactory" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryAddTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler)">
      <apidata name="TryAddTaskScheduler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="taskScheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryCreateAddSequentialScheduler(System.String,SecretNest.TaskSchedulers.SequentialScheduler@,System.Boolean)">
      <apidata name="TryCreateAddSequentialScheduler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="taskScheduler" out="true">
          <referenceTo>
            <type api="T:SecretNest.TaskSchedulers.SequentialScheduler" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="waitForThread" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)">
      <apidata name="TryGetTaskScheduler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="taskScheduler" out="true">
          <referenceTo>
            <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessage(System.Guid,System.Guid,SecretNest.RemoteAgency.IRemoteAgencyMessage@,System.DateTime@)">
      <apidata name="TryGetWaitingMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="sentMessage" out="true">
          <referenceTo>
            <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="startWaiting" out="true">
          <referenceTo>
            <type api="T:System.DateTime" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryGetWaitingMessageIds(System.Guid,System.Collections.Generic.List{System.Guid}@)">
      <apidata name="TryGetWaitingMessageIds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="messageIds" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Guid" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)">
      <apidata name="TryPing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="localProxyInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="maxWaitingTime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="delay" out="true">
          <referenceTo>
            <type api="T:System.TimeSpan" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteSiteId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteInstanceId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryPing(System.Guid,System.TimeSpan@,System.Guid@,System.Guid@,System.Exception@)">
      <apidata name="TryPing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localProxyInstanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="delay" out="true">
          <referenceTo>
            <type api="T:System.TimeSpan" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteSiteId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="remoteInstanceId" out="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="exception" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.RemoteAgencyBase.TryRemoveTaskScheduler(System.String,System.Threading.Tasks.TaskScheduler@)">
      <apidata name="TryRemoveTaskScheduler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="removed" out="true">
          <referenceTo>
            <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.RemoteAgencyBase.WaitingTimeForDisposing">
      <apidata name="WaitingTimeForDisposing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WaitingTimeForDisposing" />
      <setter name="set_WaitingTimeForDisposing" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.RemoteAgencyBase" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.SendOneWayMessageCallback">
      <apidata name="SendOneWayMessageCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.SendTwoWayMessageCallback">
      <apidata name="SendTwoWayMessageCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="message">
          <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.SerializingHelperBase`2">
      <apidata name="SerializingHelperBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer" ref="true" />
          <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TSerialized" />
        <template name="TEntityBase" />
      </templates>
      <elements>
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Serialize(`1)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.SerializeWithExceptionRedirection(`1,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Deserialize(`0)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.DeserializeWithExceptionTolerance(`0,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.SerializingHelperBase`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Deserialize(`0)">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serialized">
          <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.SerializingHelperBase`2.DeserializeWithExceptionTolerance(`0,System.Exception@)">
      <apidata name="DeserializeWithExceptionTolerance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serialized">
          <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
        </parameter>
        <parameter name="deserializingException" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Serialize(`1)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="original">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.SerializingHelperBase`2.SerializeWithExceptionRedirection(`1,System.Exception@)">
      <apidata name="SerializeWithExceptionRedirection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="original">
          <template name="TEntityBase" index="1" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
        </parameter>
        <parameter name="serializingException" out="true">
          <referenceTo>
            <type api="T:System.Exception" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="TSerialized" index="0" api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency" />
        <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true" />
      </containers>
    </api>
    <api id="N:SecretNest.RemoteAgency.AssemblyBuilding">
      <apidata name="SecretNest.RemoteAgency.AssemblyBuilding" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" />
        <element api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" />
        <element api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" />
        <element api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs">
      <apidata name="AfterTypeAndAssemblyBuiltEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Save(System.String)" />
        <element api="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Dispose(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Dispose" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.SourceInterface" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltProxy" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltServiceWrapper" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltEntities" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Assembly" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Assembly">
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltEntities">
      <apidata name="BuiltEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltEntities" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltProxy">
      <apidata name="BuiltProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltProxy" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.BuiltServiceWrapper">
      <apidata name="BuiltServiceWrapper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltServiceWrapper" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.Save(System.String)">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs.SourceInterface">
      <apidata name="SourceInterface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceInterface" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.AfterTypeAndAssemblyBuiltEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs">
      <apidata name="BeforeAssemblyCreatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.#ctor(System.Reflection.Emit.AssemblyBuilder,System.Reflection.Emit.ModuleBuilder,System.Type,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type})" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.SourceInterface" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.AssemblyBuilder" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.ModuleBuilder" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltProxy" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltServiceWrapper" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltEntities" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.#ctor(System.Reflection.Emit.AssemblyBuilder,System.Reflection.Emit.ModuleBuilder,System.Type,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assemblyBuilder">
          <type api="T:System.Reflection.Emit.AssemblyBuilder" ref="true" />
        </parameter>
        <parameter name="moduleBuilder">
          <type api="T:System.Reflection.Emit.ModuleBuilder" ref="true" />
        </parameter>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="builtProxy">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="builtServiceWrapper">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="builtEntities">
          <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.AssemblyBuilder">
      <apidata name="AssemblyBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyBuilder" />
      <returns>
        <type api="T:System.Reflection.Emit.AssemblyBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltEntities">
      <apidata name="BuiltEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltEntities" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltProxy">
      <apidata name="BuiltProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltProxy" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.BuiltServiceWrapper">
      <apidata name="BuiltServiceWrapper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltServiceWrapper" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.ModuleBuilder">
      <apidata name="ModuleBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ModuleBuilder" />
      <returns>
        <type api="T:System.Reflection.Emit.ModuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs.SourceInterface">
      <apidata name="SourceInterface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceInterface" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeAssemblyCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs">
      <apidata name="BeforeTypeCreatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.#ctor(System.Reflection.Emit.TypeBuilder,System.Type,SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType)" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.SourceInterface" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.TypeBuilder" />
        <element api="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.BuiltClassType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.#ctor(System.Reflection.Emit.TypeBuilder,System.Type,SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="typeBuilder">
          <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
        </parameter>
        <parameter name="sourceInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="builtClassType">
          <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.BuiltClassType">
      <apidata name="BuiltClassType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuiltClassType" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.SourceInterface">
      <apidata name="SourceInterface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceInterface" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs.TypeBuilder">
      <apidata name="TypeBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeBuilder" />
      <returns>
        <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BeforeTypeCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType">
      <apidata name="BuiltClassType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType.Proxy" />
        <element api="F:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType.ServiceWrapper" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType.Proxy">
      <apidata name="Proxy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType.ServiceWrapper">
      <apidata name="ServiceWrapper" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.AssemblyBuilding" />
        <type api="T:SecretNest.RemoteAgency.AssemblyBuilding.BuiltClassType" ref="false" />
      </containers>
    </api>
    <api id="N:SecretNest.RemoteAgency.Attributes">
      <apidata name="SecretNest.RemoteAgency.Attributes" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" />
        <element api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" />
        <element api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute" />
        <element api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute">
      <apidata name="AssetIgnoredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.#ctor(System.Boolean,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.IsIgnored" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.WillThrowException" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.#ctor(System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIgnored" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="willThrownException" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.IsIgnored">
      <apidata name="IsIgnored" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIgnored" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsIgnored.IsIgnored">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute.WillThrowException">
      <apidata name="WillThrowException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WillThrowException" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute">
      <apidata name="AssetOneWayOperatingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute.#ctor(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute.IsOneWay" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isOneWay" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute.IsOneWay">
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsOneWay.IsOneWay">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute">
      <apidata name="AsyncMethodAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute.#ctor(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute.IsAsyncMethod" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isAsyncMethod" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute.IsAsyncMethod">
      <apidata name="IsAsyncMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAsyncMethod" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AsyncMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute">
      <apidata name="AttributePassThroughAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.#ctor(System.Type,System.Type[],System.Object[],System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeId" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeConstructorParameterTypes" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeConstructorParameters" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.#ctor(System.Type,System.Type[],System.Object[],System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributeConstructorParameterTypes" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="attributeConstructorParameters" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="attributeId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.Attribute">
      <apidata name="Attribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attribute" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeConstructorParameters">
      <apidata name="AttributeConstructorParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeConstructorParameters" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeConstructorParameterTypes">
      <apidata name="AttributeConstructorParameterTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeConstructorParameterTypes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute.AttributeId">
      <apidata name="AttributeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute">
      <apidata name="AttributePassThroughFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.#ctor(System.String,System.String,System.Object,System.Int32)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.AttributeId" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.Order" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.FieldName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.#ctor(System.String,System.String,System.Object,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="attributeId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="order" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.AttributeId">
      <apidata name="AttributeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.FieldName">
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.Order">
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute">
      <apidata name="AttributePassThroughIndexBasedParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.#ctor(System.String,System.Int32,System.Object)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.AttributeId" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.ParameterIndex" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.#ctor(System.String,System.Int32,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="attributeId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.AttributeId">
      <apidata name="AttributeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.ParameterIndex">
      <apidata name="ParameterIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughIndexBasedParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute">
      <apidata name="AttributePassThroughPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.#ctor(System.String,System.String,System.Object,System.Int32)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.AttributeId" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.Order" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.PropertyName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.#ctor(System.String,System.String,System.Object,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="attributeId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="order" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.AttributeId">
      <apidata name="AttributeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.Order">
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AttributePassThroughPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute">
      <apidata name="CustomizedAssetNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute.AssetName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute.AssetName">
      <apidata name="AssetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedAssetNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute">
      <apidata name="CustomizedClassNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.#ctor(System.String,System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.ProxyClassName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.ServiceWrapperClassName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.AssemblyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="proxyClassName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="serviceWrapperClassName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="assemblyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.AssemblyName">
      <apidata name="AssemblyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.ProxyClassName">
      <apidata name="ProxyClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProxyClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute.ServiceWrapperClassName">
      <apidata name="ServiceWrapperClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceWrapperClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedClassNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute">
      <apidata name="CustomizedEventEntityNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.#ctor(System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.RaisingNotificationEntityName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.RaisingFeedbackEntityName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="raisingNotificationEntityName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="raisingFeedbackEntityName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.RaisingFeedbackEntityName">
      <apidata name="RaisingFeedbackEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RaisingFeedbackEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute.RaisingNotificationEntityName">
      <apidata name="RaisingNotificationEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RaisingNotificationEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute">
      <apidata name="CustomizedEventParameterEntityPropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute.#ctor(System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute.ParameterName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.EntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute.ParameterName">
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute">
      <apidata name="CustomizedMethodEntityNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.#ctor(System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.ParameterEntityName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.ReturnValueEntityName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnValueEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.ParameterEntityName">
      <apidata name="ParameterEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute.ReturnValueEntityName">
      <apidata name="ReturnValueEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnValueEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedMethodEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute">
      <apidata name="CustomizedParameterEntityPropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedEventParameterEntityPropertyNameAttribute" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.EntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.EntityPropertyName">
      <apidata name="EntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute">
      <apidata name="CustomizedPropertyGetEntityNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.#ctor(System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.RequestEntityName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.ResponseEntityName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.RequestEntityName">
      <apidata name="RequestEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute.ResponseEntityName">
      <apidata name="ResponseEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute">
      <apidata name="CustomizedPropertyGetValuePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.EntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertyGetValuePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute">
      <apidata name="CustomizedPropertySetEntityNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.#ctor(System.String,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.RequestEntityName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.ResponseEntityName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseEntityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.RequestEntityName">
      <apidata name="RequestEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute.ResponseEntityName">
      <apidata name="ResponseEntityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetEntityNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute">
      <apidata name="CustomizedPropertySetValuePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedParameterEntityPropertyNameAttribute.EntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedPropertySetValuePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute">
      <apidata name="CustomizedReturnValueEntityPropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute.EntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute.EntityPropertyName">
      <apidata name="EntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.CustomizedReturnValueEntityPropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute">
      <apidata name="EventParameterIgnoredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute.#ctor(System.String,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute.ParameterName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute.IsIgnored" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute.#ctor(System.String,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isIgnored" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute.ParameterName">
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute">
      <apidata name="EventParameterReturnRequiredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute.ParameterName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedWhenExceptionThrown" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.ResponseEntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="isIncludedWhenExceptionThrown" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="responseEntityPropertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute.ParameterName">
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute">
      <apidata name="EventParameterReturnRequiredPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.Type,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.ParameterName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsSimpleMode" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.PropertyNameInParameter" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.HelperClass" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.ResponseEntityPropertyName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedWhenExceptionThrown" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyNameInParameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseEntityPropertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="isIncludedWhenExceptionThrown" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.Type,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helperClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute.ParameterName">
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.IIsIgnored">
      <apidata name="IIsIgnored" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetIgnoredAttribute" ref="true" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute" ref="true" />
      </implementors>
      <elements>
        <element api="P:SecretNest.RemoteAgency.Attributes.IIsIgnored.IsIgnored" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.IIsIgnored.IsIgnored">
      <apidata name="IsIgnored" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsIgnored" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.IIsOneWay">
      <apidata name="IIsOneWay" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute" ref="true" />
        <type api="T:SecretNest.RemoteAgency.Attributes.AssetOneWayOperatingAttribute" ref="true" />
      </implementors>
      <elements>
        <element api="P:SecretNest.RemoteAgency.Attributes.IIsOneWay.IsOneWay" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.IIsOneWay.IsOneWay">
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired">
      <apidata name="IIsReturnRequired" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" ref="true" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </implementors>
      <elements>
        <element api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.ResponseEntityPropertyName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedWhenExceptionThrown" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedInReturning">
      <apidata name="IsIncludedInReturning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedInReturning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedWhenExceptionThrown">
      <apidata name="IsIncludedWhenExceptionThrown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedWhenExceptionThrown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.ResponseEntityPropertyName">
      <apidata name="ResponseEntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute">
      <apidata name="LocalExceptionHandlingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute.#ctor(SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute.LocalExceptionHandlingMode" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute.#ctor(SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mode" optional="true">
          <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
          <argument>
            <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
            <enumValue>
              <field name="Redirect" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute.LocalExceptionHandlingMode">
      <apidata name="LocalExceptionHandlingMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalExceptionHandlingMode" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode">
      <apidata name="LocalExceptionHandlingMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Throw" />
        <element api="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Suppress" />
        <element api="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Redirect" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Redirect">
      <apidata name="Redirect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Suppress">
      <apidata name="Suppress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode.Throw">
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.LocalExceptionHandlingMode" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute">
      <apidata name="OperatingTimeoutTimeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor" />
        <element api="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.Timeout" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventAddingTimeout" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventRemovingTimeout" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventRaisingTimeout" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.PropertyGettingTimeout" />
        <element api="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.PropertySettingTimeout" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyGettingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="propertySettingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventAddingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="eventRemovingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="eventRaisingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="methodCallingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="eventAddingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="eventRemovingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="eventRaisingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="propertyGettingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="propertySettingTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventAddingTimeout">
      <apidata name="EventAddingTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventAddingTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventRaisingTimeout">
      <apidata name="EventRaisingTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventRaisingTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.EventRemovingTimeout">
      <apidata name="EventRemovingTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventRemovingTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.PropertyGettingTimeout">
      <apidata name="PropertyGettingTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyGettingTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.PropertySettingTimeout">
      <apidata name="PropertySettingTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertySettingTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute.Timeout">
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.OperatingTimeoutTimeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute">
      <apidata name="ParameterIgnoredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterIgnoredAttribute" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute.#ctor(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute.IsIgnored" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIgnored" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute.IsIgnored">
      <apidata name="IsIgnored" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIgnored" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsIgnored.IsIgnored">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsIgnored" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute">
      <apidata name="ParameterReturnRequiredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredAttribute" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.#ctor(System.Boolean,System.Boolean,System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedWhenExceptionThrown" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.ResponseEntityPropertyName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.#ctor(System.Boolean,System.Boolean,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="isIncludedWhenExceptionThrown" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="responseEntityPropertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedInReturning">
      <apidata name="IsIncludedInReturning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedInReturning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedInReturning">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.IsIncludedWhenExceptionThrown">
      <apidata name="IsIncludedWhenExceptionThrown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedWhenExceptionThrown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedWhenExceptionThrown">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute.ResponseEntityPropertyName">
      <apidata name="ResponseEntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.ResponseEntityPropertyName">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute">
      <apidata name="ParameterReturnRequiredPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.Attributes.EventParameterReturnRequiredPropertyAttribute" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.#ctor(System.Type,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsSimpleMode" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.PropertyNameInParameter" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.HelperClass" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.ResponseEntityPropertyName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedWhenExceptionThrown" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyNameInParameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseEntityPropertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="isIncludedWhenExceptionThrown" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.#ctor(System.Type,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="helperClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.HelperClass">
      <apidata name="HelperClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelperClass" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedInReturning">
      <apidata name="IsIncludedInReturning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedInReturning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedInReturning">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsIncludedWhenExceptionThrown">
      <apidata name="IsIncludedWhenExceptionThrown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedWhenExceptionThrown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedWhenExceptionThrown">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.IsSimpleMode">
      <apidata name="IsSimpleMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSimpleMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.PropertyNameInParameter">
      <apidata name="PropertyNameInParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNameInParameter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute.ResponseEntityPropertyName">
      <apidata name="ResponseEntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.ResponseEntityPropertyName">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ParameterReturnRequiredPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute">
      <apidata name="PropertyGetOneWayOperatingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute.#ctor(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute.IsOneWay" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isOneWay" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute.IsOneWay">
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsOneWay.IsOneWay">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsOneWay" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.PropertyGetOneWayOperatingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute">
      <apidata name="ReturnIgnoredAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute.#ctor(System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute.IsIgnored" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIgnored" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute.IsIgnored">
      <apidata name="IsIgnored" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIgnored" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnIgnoredAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute">
      <apidata name="ReturnRequiredPropertyHelperAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.#ctor(System.Boolean,System.String,System.Boolean)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.IsIncludedInReturning" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.ResponseEntityPropertyName" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.IsIncludedWhenExceptionThrown" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.#ctor(System.Boolean,System.String,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIncludedInReturning" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="responseEntityPropertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="isIncludedWhenExceptionThrown" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.IsIncludedInReturning">
      <apidata name="IsIncludedInReturning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedInReturning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedInReturning">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.IsIncludedWhenExceptionThrown">
      <apidata name="IsIncludedWhenExceptionThrown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsIncludedWhenExceptionThrown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.IsIncludedWhenExceptionThrown">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute.ResponseEntityPropertyName">
      <apidata name="ResponseEntityPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ResponseEntityPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:SecretNest.RemoteAgency.Attributes.IIsReturnRequired.ResponseEntityPropertyName">
          <type api="T:SecretNest.RemoteAgency.Attributes.IIsReturnRequired" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ReturnRequiredPropertyHelperAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute">
      <apidata name="ThreadLockAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.#ctor(SecretNest.RemoteAgency.Attributes.ThreadLockMode)" />
        <element api="M:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.#ctor(System.String)" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.ThreadLockMode" />
        <element api="P:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.TaskSchedulerName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.#ctor(SecretNest.RemoteAgency.Attributes.ThreadLockMode)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="threadLockMode">
          <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="taskSchedulerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.TaskSchedulerName">
      <apidata name="TaskSchedulerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TaskSchedulerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute.ThreadLockMode">
      <apidata name="ThreadLockMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ThreadLockMode" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode">
      <apidata name="ThreadLockMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.None" />
        <element api="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.SynchronizationContext" />
        <element api="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.AnyButSameThread" />
        <element api="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.TaskSchedulerSpecified" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.AnyButSameThread">
      <apidata name="AnyButSameThread" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.SynchronizationContext">
      <apidata name="SynchronizationContext" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Attributes.ThreadLockMode.TaskSchedulerSpecified">
      <apidata name="TaskSchedulerSpecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency.Abstraction" module="SecretNest.RemoteAgency.Abstraction" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Attributes" />
        <type api="T:SecretNest.RemoteAgency.Attributes.ThreadLockMode" ref="false" />
      </containers>
    </api>
    <api id="N:SecretNest.RemoteAgency.BinarySerializer">
      <apidata name="SecretNest.RemoteAgency.BinarySerializer" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage" />
        <element api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer" />
        <element api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage">
      <apidata name="RemoteAgencyBinaryEmptyMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinaryEmptyMessage" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer">
      <apidata name="RemoteAgencyBinarySerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.#ctor(System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.Serialize(System.Object)" />
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.Deserialize(System.Byte[])" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.SerializeWithExceptionRedirection(`1,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.DeserializeWithExceptionTolerance(`0,System.Exception@)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="securityIssueAcknowledged" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.Deserialize(System.Byte[])">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Deserialize(`0)">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="serialized">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer.Serialize(System.Object)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Serialize(`1)">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="original">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializer" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder">
      <apidata name="RemoteAgencyBinarySerializerEntityTypeBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)" />
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.CreateEmptyMessage" />
        <element api="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.#ctor" />
        <element api="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.InterfaceLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.AssetLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.DelegateLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.ParameterLevelAttributeBaseType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.AssetLevelAttributeBaseType">
      <apidata name="AssetLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.AssetLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AssetLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)">
      <apidata name="BuildEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="typeBuilder">
          <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
        </parameter>
        <parameter name="entityBuilding">
          <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.CreateEmptyMessage">
      <apidata name="CreateEmptyMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.CreateEmptyMessage">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.DelegateLevelAttributeBaseType">
      <apidata name="DelegateLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.DelegateLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DelegateLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.InterfaceLevelAttributeBaseType">
      <apidata name="InterfaceLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.InterfaceLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InterfaceLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder.ParameterLevelAttributeBaseType">
      <apidata name="ParameterLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.ParameterLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ParameterLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.BinarySerializer" />
        <type api="T:SecretNest.RemoteAgency.BinarySerializer.RemoteAgencyBinarySerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="N:SecretNest.RemoteAgency.Inspecting">
      <apidata name="SecretNest.RemoteAgency.Inspecting" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException" />
        <element api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException">
      <apidata name="AssetNameConflictException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException">
      <apidata name="EntityNameConflictException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException">
      <apidata name="EntityPropertyNameConflictException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.Parameter" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.CausedMemberType" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="causedMemberType">
          <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="causedMemberType">
          <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Reflection.ParameterInfo" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Reflection.ParameterInfo" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.CausedMemberType">
      <apidata name="CausedMemberType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CausedMemberType" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException.Parameter">
      <apidata name="Parameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameter" />
      <returns>
        <type api="T:System.Reflection.ParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType">
      <apidata name="EntityPropertyNameConflictExceptionCausedMemberType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.Parameter" />
        <element api="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.ReturnValue" />
        <element api="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.Property" />
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.Parameter">
      <apidata name="Parameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.Property">
      <apidata name="Property" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </containers>
    </api>
    <api id="F:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType.ReturnValue">
      <apidata name="ReturnValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictExceptionCausedMemberType" ref="false" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException">
      <apidata name="InvalidAttributeDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:SecretNest.RemoteAgency.Inspecting.EntityNameConflictException" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Inspecting.AssetNameConflictException" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Inspecting.EntityPropertyNameConflictException" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute">
      <apidata name="Attribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attribute" />
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath">
      <apidata name="MemberPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberPath" />
      <returns>
        <type api="T:System.Collections.Generic.Stack`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException">
      <apidata name="InvalidParameterAttributeDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.Parameter" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Reflection.ParameterInfo" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.ParameterInfo,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Reflection.ParameterInfo" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException.Parameter">
      <apidata name="Parameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameter" />
      <returns>
        <type api="T:System.Reflection.ParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidParameterAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException">
      <apidata name="InvalidReturnValueAttributeDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.Attribute" />
        <element api="P:SecretNest.RemoteAgency.Inspecting.InvalidAttributeDataException.MemberPath" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.String,System.Attribute,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException.#ctor(System.String,System.Attribute,System.Reflection.MemberInfo,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="memberParentPath">
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.Inspecting" />
        <type api="T:SecretNest.RemoteAgency.Inspecting.InvalidReturnValueAttributeDataException" ref="true" />
      </containers>
    </api>
    <api id="N:SecretNest.RemoteAgency.JsonSerializer">
      <apidata name="SecretNest.RemoteAgency.JsonSerializer" group="namespace" />
      <elements>
        <element api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage" />
        <element api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer" />
        <element api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" />
      </elements>
    </api>
    <api id="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage">
      <apidata name="RemoteAgencyJsonEmptyMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonEmptyMessage" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer">
      <apidata name="RemoteAgencyJsonSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.#ctor(System.Boolean,System.Boolean)" />
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.Serialize(System.Object)" />
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.Deserialize(System.String)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.SerializeWithExceptionRedirection(`1,System.Exception@)" />
        <element api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.DeserializeWithExceptionTolerance(`0,System.Exception@)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.#ctor(System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="intented" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="includingFullAssemblyName" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.Deserialize(System.String)">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Deserialize(`0)">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="serialized">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer.Serialize(System.Object)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.SerializingHelperBase`2.Serialize(`1)">
          <type api="T:SecretNest.RemoteAgency.SerializingHelperBase`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="original">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder">
      <apidata name="RemoteAgencyJsonSerializerEntityTypeBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)" />
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.CreateEmptyMessage" />
        <element api="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.#ctor" />
        <element api="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.InterfaceLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.AssetLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.DelegateLevelAttributeBaseType" />
        <element api="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.ParameterLevelAttributeBaseType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.AssetLevelAttributeBaseType">
      <apidata name="AssetLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.AssetLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AssetLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)">
      <apidata name="BuildEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.BuildEntity(System.Reflection.Emit.TypeBuilder,SecretNest.RemoteAgency.EntityBuilding)">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="typeBuilder">
          <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
        </parameter>
        <parameter name="entityBuilding">
          <type api="T:SecretNest.RemoteAgency.EntityBuilding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.CreateEmptyMessage">
      <apidata name="CreateEmptyMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:SecretNest.RemoteAgency.EntityTypeBuilderBase.CreateEmptyMessage">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:SecretNest.RemoteAgency.IRemoteAgencyMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.DelegateLevelAttributeBaseType">
      <apidata name="DelegateLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.DelegateLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DelegateLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.InterfaceLevelAttributeBaseType">
      <apidata name="InterfaceLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.InterfaceLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InterfaceLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder.ParameterLevelAttributeBaseType">
      <apidata name="ParameterLevelAttributeBaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:SecretNest.RemoteAgency.EntityTypeBuilderBase.ParameterLevelAttributeBaseType">
          <type api="T:SecretNest.RemoteAgency.EntityTypeBuilderBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ParameterLevelAttributeBaseType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="SecretNest.RemoteAgency" module="SecretNest.RemoteAgency" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:SecretNest.RemoteAgency.JsonSerializer" />
        <type api="T:SecretNest.RemoteAgency.JsonSerializer.RemoteAgencyJsonSerializerEntityTypeBuilder" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>